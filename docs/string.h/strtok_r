strtok_r() - DERP OS man page

Name ------------------- 

strtok_r() - extract tokens from strings.

Synopsis ---------------

#include "string.h"

void strtok_r( char *s, const char *delim );

Description ------------

strtok() function parses a string into a sequence of tokens. On the first
call to strtok() the string to be parsed should be specified in str. In each
subsequent call that should parse the same string, str should be NULL.

The delim argument specifies a set of characters that delimit the tokens
in the parsed string. The caller may specify different strings in delim in
successive calls that parse the same string.

Each call to strtok() returns a pointer to a null-terminated string containing
the next token. This string does not include the delimiting character. If
no more tokens are found, strtok() returns NULL.

A sequence of two or more contiguous delimiter characters in the parsed
string is considered to be a single delimiter. Delimiter characters at the
start or end of the string are ignored. Put another way: the tokens returned
by strtok() are always nonempty strings.

The strtok_r() function is a reentrant version strtok(). The saveptr argument
is a pointer to a char * variable that is used internally by strtok_r() in
order to maintain context between successive calls that parse the same string.

On the first call to strtok_r(), str should point to the string to be parsed,
and the value of saveptr is ignored. In subsequent calls, str should be NULL,
and saveptr should be unchanged since the previous call.

Different strings may be parsed concurrently using sequences of calls to
strtok_r() that specify different saveptr arguments.

Return Value -----------

The strtok() and strtok_r() functions return a pointer to the next token,
or NULL if there are no more tokens.

Source -----------------

http://linux.die.net/man/3/strtok_r
